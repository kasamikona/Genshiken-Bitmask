#! /usr/bin/env python

import pygame
import time
import math

windowwidth = 48 * 10
windowheight = 12 * 10
fps = 10
matrix = [[0 for col in range(48)] for row in range(12)]

logo1 = [ \
	[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2], \
	[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2], \
	[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2], \
	[2,2,2,2,0,0,0,2,2,0,0,2,2,0,0,0,2,2,2,0,0,0,2,0,2,2,2,2,0,2,0,2,0,2,2,2,0,0,2,2,0,0,0,2,2,2,2,2], \
	[2,2,2,0,1,1,1,0,0,1,1,0,0,1,1,1,0,2,0,1,1,1,0,1,0,0,2,0,1,0,1,0,1,0,2,0,1,1,0,0,1,1,1,0,2,2,2,2], \
	[2,2,0,1,0,0,0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,0,0,1,1,1,0,2,0,0,1,1,1,0,0,1,0,0,1,0,1,0,0,1,0,2,2,2], \
	[2,2,0,1,0,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,1,1,1,1,0,1,0,0,1,0,2,2,2], \
	[2,2,2,0,1,1,1,0,0,1,0,0,0,1,0,0,1,0,1,1,1,0,0,1,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,2,2,2], \
	[2,2,2,2,0,0,0,2,2,0,2,2,2,0,2,2,0,2,0,0,0,2,2,0,2,2,0,2,0,2,0,2,2,0,2,2,0,2,2,2,0,2,2,0,2,2,2,2], \
	[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2], \
	[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2], \
	[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2], \
]

logo2 = [ \
	[0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0], \
	[0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0], \
	[0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0], \
	[0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,1,1,0,0], \
	[0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,1,1,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,0], \
	[0,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0], \
	[0,1,1,1,1,0,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,0,0,0,0], \
	[0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0], \
	[0,0,0,1,1,0,0,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,0,0], \
	[0,0,0,1,0,0,0,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,1,1,0,0], \
	[0,0,0,1,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,1,1,0,0], \
	[0,0,0,1,0,0,0,1,0,1,0,1,1,0,0,0,0,0,1,1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,1,1,0], \
	[0,0,0,1,1,0,0,1,0,1,1,1,1,0,0,0,0,1,1,1,1,1,0,1,1,1,1,0,1,0,0,0,0,0,1,1,0,0,0,0,1,0,1,1,1,1,1,1], \
	[0,0,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,1,1,0,1,0,0,1,1,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1], \
	[0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,1,1,0,0,1,0,1,1,1,1,0,0,1,0,0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0], \
	[1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,0], \
	[1,1,0,1,1,0,0,1,0,1,1,1,1,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0], \
	[1,1,0,1,1,1,0,1,1,0,1,1,1,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,0,1,0,1,1,1,1,1,0,0,1,1,0,0], \
	[0,1,1,1,0,1,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,0,1,1,0,0], \
	[0,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,1,1,0,1,0,0,0,1,1,0,0], \
	[0,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,1,0,1,1,0,0,0,0,0,1,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0], \
	[0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,1,0,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0], \
	[0,0,1,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,1,0,0,0,1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,1,0,0,0,1,1,0,0], \
	[0,1,1,1,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,1,1,1,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,1,1,0,0], \
	[0,1,1,0,0,0,0,0,1,1,0,0,0,0,1,0,1,1,1,1,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0], \
	[1,1,1,0,0,0,0,1,1,1,0,0,0,0,1,0,1,1,1,1,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0], \
	[1,1,0,0,0,0,0,1,0,1,0,0,0,0,1,1,1,1,0,1,1,0,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0], \
	[1,0,0,0,0,0,1,1,0,1,0,0,0,0,1,1,1,0,0,1,1,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0], \
	[0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0], \
	[0,0,0,0,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0], \
	[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0], \
	[0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], \
]

charset5 = { \
	32: [[2,2,2,2],[2,2,2,2],[2,2,2,2],[2,2,2,2],[2,2,2,2],[2,2,2,2],[2,2,2,2]], \
	33: [[2,0,2],[0,1,0],[0,1,0],[0,1,0],[2,0,2],[0,1,0],[2,0,2]], \
	34: [[2,0,2,0,2],[0,1,0,1,0],[0,1,0,1,0],[2,0,2,0,2],[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2]], \
	35: [[2,2,0,2,0,2,2],[2,0,1,0,1,0,2],[0,1,1,1,1,1,0],[2,0,1,0,1,0,2],[0,1,1,1,1,1,0],[2,0,1,0,1,0,2],[2,2,0,2,0,2,2]], \
	36: [[2,2,0,0,0,0,2],[2,0,1,1,1,1,0],[0,1,0,1,0,0,2],[2,0,1,1,1,0,2],[2,0,0,1,0,1,0],[0,1,1,1,1,0,2],[2,0,0,0,0,2,2]], \
	37: [[2,0,0,2,2,0,2],[0,1,1,0,0,1,0],[0,1,1,0,1,0,2],[2,0,0,1,0,0,2],[2,0,1,0,1,1,0],[0,1,0,0,1,1,0],[2,0,2,2,0,0,2]], \
	38: [[2,2,0,0,2,2,2],[2,0,1,1,0,2,2],[0,1,0,0,1,0,2],[2,0,1,1,1,1,0],[0,1,0,0,1,0,2],[2,0,1,1,0,1,0],[2,2,0,0,2,0,2]], \
	39: [[2,0,2],[0,1,0],[0,1,0],[2,0,2],[2,2,2],[2,2,2],[2,2,2]], \
	40: [[2,2,0,2],[2,0,1,0],[0,1,0,2],[0,1,0,2],[0,1,0,2],[2,0,1,0],[2,2,0,2]], \
	41: [[2,0,2,2],[0,1,0,2],[2,0,1,0],[2,0,1,0],[2,0,1,0],[0,1,0,2],[2,0,2,2]], \
	42: [[2,2,2,0,2,2,2],[2,0,0,1,0,0,2],[0,1,1,1,1,1,0],[2,0,1,1,1,0,2],[2,0,1,0,1,0,2],[2,2,0,2,0,2,2],[2,2,2,2,2,2,2]], \
	43: [[2,2,2,0,2,2,2],[2,2,0,1,0,2,2],[2,0,0,1,0,0,2],[0,1,1,1,1,1,0],[2,0,0,1,0,0,2],[2,2,0,1,0,2,2],[2,2,2,0,2,2,2]], \
	44: [[2,2,2,2],[2,2,2,2],[2,2,2,2],[2,2,0,2],[2,0,1,0],[0,1,0,2],[2,0,2,2]], \
	45: [[2,2,2,2,2,2,2],[2,2,2,2,2,2,2],[2,0,0,0,0,0,2],[0,1,1,1,1,1,0],[2,0,0,0,0,0,2],[2,2,2,2,2,2,2],[2,2,2,2,2,2,2]], \
	46: [[2,2,2,2],[2,2,2,2],[2,2,2,2],[2,0,0,2],[0,1,1,0],[0,1,1,0],[2,0,0,2]], \
	47: [[2,2,2,2,2,0,2],[2,2,2,2,0,1,0],[2,2,2,0,1,0,2],[2,2,0,1,0,2,2],[2,0,1,0,2,2,2],[0,1,0,2,2,2,2],[2,0,2,2,2,2,2]], \
	48: [[2,2,0,0,0,2,2],[2,0,1,1,1,0,2],[0,1,0,0,0,1,0],[0,1,0,1,0,1,0],[0,1,0,0,0,1,0],[2,0,1,1,1,0,2],[2,2,0,0,0,2,2]], \
	49: [[2,2,2,0,2,2,2],[2,0,0,1,0,2,2],[0,1,1,1,0,2,2],[2,0,0,1,0,2,2],[2,0,0,1,0,0,2],[0,1,1,1,1,1,0],[2,0,0,0,0,0,2]], \
	50: [[2,2,0,0,0,2,2],[2,0,1,1,1,0,2],[0,1,0,0,0,1,0],[2,0,0,1,1,0,2],[2,0,1,0,0,0,2],[0,1,1,1,1,1,0],[2,0,0,0,0,0,2]], \
	51: [[2,0,0,0,0,2,2],[0,1,1,1,1,0,2],[2,0,0,0,0,1,0],[2,0,1,1,1,0,2],[2,0,0,0,0,1,0],[0,1,1,1,1,0,2],[2,0,0,0,0,2,2]], \
	52: [[2,2,2,0,0,2,2],[2,2,0,1,1,0,2],[2,0,1,0,1,0,2],[0,1,0,0,1,0,2],[0,1,1,1,1,1,0],[2,0,0,0,1,0,2],[2,2,2,2,0,2,2]], \
	53: [[2,0,0,0,0,0,2],[0,1,1,1,1,1,0],[0,1,0,0,0,0,2],[0,1,1,1,1,0,2],[2,0,0,0,0,1,0],[0,1,1,1,1,0,2],[2,0,0,0,0,2,2]], \
	54: [[2,2,0,0,0,2,2],[2,0,1,1,1,0,2],[0,1,0,0,0,2,2],[0,1,1,1,1,0,2],[0,1,0,0,0,1,0],[2,0,1,1,1,0,2],[2,2,0,0,0,2,2]], \
	55: [[2,0,0,0,0,0,2],[0,1,1,1,1,1,0],[2,0,0,0,0,1,0],[2,2,2,0,1,0,2],[2,2,0,1,0,2,2],[2,2,0,1,0,2,2],[2,2,2,0,2,2,2]], \
	56: [[2,2,0,0,0,2,2],[2,0,1,1,1,0,2],[0,1,0,0,0,1,0],[2,0,1,1,1,0,2],[0,1,0,0,0,1,0],[2,0,1,1,1,0,2],[2,2,0,0,0,2,2]], \
	57: [[2,2,0,0,0,2,2],[2,0,1,1,1,0,2],[0,1,0,0,0,1,0],[2,0,1,1,1,1,0],[2,2,0,0,0,1,0],[2,0,1,1,1,0,2],[2,2,0,0,0,2,2]], \
	58: [[2,0,0,2],[0,1,1,0],[0,1,1,0],[2,0,0,2],[0,1,1,0],[0,1,1,0],[2,0,0,2]], \
	59: [[2,0,0,2],[0,1,1,0],[0,1,1,0],[2,0,0,2],[2,0,1,0],[0,1,0,2],[2,0,2,2]], \
	60: [[2,2,2,2,0,0,2],[2,2,0,0,1,1,0],[2,0,1,1,0,0,2],[0,1,0,0,2,2,2],[2,0,1,1,0,0,2],[2,2,0,0,1,1,0],[2,2,2,2,0,0,2]], \
	61: [[2,2,2,2,2,2,2],[2,0,0,0,0,0,2],[0,1,1,1,1,1,0],[2,0,0,0,0,0,2],[0,1,1,1,1,1,0],[2,0,0,0,0,0,2],[2,2,2,2,2,2,2]], \
	62: [[2,0,0,2,2,2,2],[0,1,1,0,0,2,2],[2,0,0,1,1,0,2],[2,2,2,0,0,1,0],[2,0,0,1,1,0,2],[0,1,1,0,0,2,2],[2,0,0,2,2,2,2]], \
	63: [[2,0,0,0,0,2,2],[0,1,1,1,1,0,2],[2,0,0,0,0,1,0],[2,0,1,1,1,0,2],[2,2,0,0,0,2,2],[2,0,1,0,2,2,2],[2,2,0,2,2,2,2]], \
	64: [[2,2,0,0,0,2,2],[2,0,1,1,1,0,2],[0,1,0,0,0,1,0],[0,1,0,1,1,1,0],[0,1,0,1,1,1,0],[2,0,1,0,0,0,2],[2,2,0,2,2,2,2]], \
	65: [[2,2,0,0,0,2,2],[2,0,1,1,1,0,2],[0,1,0,0,0,1,0],[0,1,1,1,1,1,0],[0,1,0,0,0,1,0],[0,1,0,2,0,1,0],[2,0,2,2,2,0,2]], \
	66: [[2,0,0,0,0,2,2],[0,1,1,1,1,0,2],[0,1,0,0,0,1,0],[0,1,1,1,1,0,2],[0,1,0,0,0,1,0],[0,1,1,1,1,0,2],[2,0,0,0,0,2,2]], \
	67: [[2,2,0,0,0,2,2],[2,0,1,1,1,0,2],[0,1,0,0,0,1,0],[0,1,0,2,2,0,2],[0,1,0,0,0,1,0],[2,0,1,1,1,0,2],[2,2,0,0,0,2,2]], \
	68: [[2,0,0,0,0,2,2],[0,1,1,1,1,0,2],[0,1,0,0,0,1,0],[0,1,0,2,0,1,0],[0,1,0,0,0,1,0],[0,1,1,1,1,0,2],[2,0,0,0,0,2,2]], \
	69: [[2,0,0,0,0,0,2],[0,1,1,1,1,1,0],[0,1,0,0,0,0,2],[0,1,1,1,0,2,2],[0,1,0,0,0,0,2],[0,1,1,1,1,1,0],[2,0,0,0,0,0,2]], \
	70: [[2,0,0,0,0,0,2],[0,1,1,1,1,1,0],[0,1,0,0,0,0,2],[0,1,1,1,0,2,2],[0,1,0,0,2,2,2],[0,1,0,2,2,2,2],[2,0,2,2,2,2,2]], \
	71: [[2,2,0,0,0,2,2],[2,0,1,1,1,0,2],[0,1,0,0,0,0,2],[0,1,0,1,1,1,0],[0,1,0,0,0,1,0],[2,0,1,1,1,0,2],[2,2,0,0,0,2,2]], \
	72: [[2,0,2,2,2,0,2],[0,1,0,2,0,1,0],[0,1,0,0,0,1,0],[0,1,1,1,1,1,0],[0,1,0,0,0,1,0],[0,1,0,2,0,1,0],[2,0,2,2,2,0,2]], \
	73: [[2,0,2],[0,1,0],[0,1,0],[0,1,0],[0,1,0],[0,1,0],[2,0,2]], \
	74: [[2,2,2,2,2,0,2],[2,2,2,2,0,1,0],[2,2,2,2,0,1,0],[2,0,2,2,0,1,0],[0,1,0,0,0,1,0],[2,0,1,1,1,0,2],[2,2,0,0,0,2,2]], \
	75: [[2,0,2,2,2,0,2],[0,1,0,2,0,1,0],[0,1,0,0,1,0,2],[0,1,1,1,0,2,2],[0,1,0,0,1,0,2],[0,1,0,2,0,1,0],[2,0,2,2,2,0,2]], \
	76: [[2,0,2,2,2,2,2],[0,1,0,2,2,2,2],[0,1,0,2,2,2,2],[0,1,0,2,2,2,2],[0,1,0,0,0,0,2],[0,1,1,1,1,1,0],[2,0,0,0,0,0,2]], \
	77: [[2,0,2,2,2,0,2],[0,1,0,2,0,1,0],[0,1,1,0,1,1,0],[0,1,0,1,0,1,0],[0,1,0,1,0,1,0],[0,1,0,1,0,1,0],[2,0,2,0,2,0,2]], \
	78: [[2,0,2,2,2,0,2],[0,1,0,2,0,1,0],[0,1,1,0,0,1,0],[0,1,0,1,0,1,0],[0,1,0,0,1,1,0],[0,1,0,2,0,1,0],[2,0,2,2,2,0,2]], \
	79: [[2,2,0,0,0,2,2],[2,0,1,1,1,0,2],[0,1,0,0,0,1,0],[0,1,0,2,0,1,0],[0,1,0,0,0,1,0],[2,0,1,1,1,0,2],[2,2,0,0,0,2,2]], \
	80: [[2,0,0,0,0,2,2],[0,1,1,1,1,0,2],[0,1,0,0,0,1,0],[0,1,1,1,1,0,2],[0,1,0,0,0,2,2],[0,1,0,2,2,2,2],[2,0,2,2,2,2,2]], \
	81: [[2,2,0,0,0,2,2],[2,0,1,1,1,0,2],[0,1,0,0,0,1,0],[0,1,0,1,0,1,0],[0,1,0,0,1,1,0],[2,0,1,1,1,1,0],[2,2,0,0,0,0,2]], \
	82: [[2,0,0,0,0,2,2],[0,1,1,1,1,0,2],[0,1,0,0,0,1,0],[0,1,1,1,1,0,2],[0,1,0,1,0,0,2],[0,1,0,0,1,1,0],[2,0,2,2,0,0,2]], \
	83: [[2,2,0,0,0,0,2],[2,0,1,1,1,1,0],[0,1,0,0,0,0,2],[2,0,1,1,1,0,2],[2,0,0,0,0,1,0],[0,1,1,1,1,0,2],[2,0,0,0,0,2,2]], \
	84: [[2,0,0,0,0,0,2],[0,1,1,1,1,1,0],[2,0,0,1,0,0,2],[2,2,0,1,0,2,2],[2,2,0,1,0,2,2],[2,2,0,1,0,2,2],[2,2,2,0,2,2,2]], \
	85: [[2,0,2,2,2,0,2],[0,1,0,2,0,1,0],[0,1,0,2,0,1,0],[0,1,0,2,0,1,0],[0,1,0,0,0,1,0],[2,0,1,1,1,0,2],[2,2,0,0,0,2,2]], \
	86: [[2,0,2,2,2,0,2],[0,1,0,2,0,1,0],[0,1,0,2,0,1,0],[2,0,1,0,1,0,2],[2,0,1,0,1,0,2],[2,2,0,1,0,2,2],[2,2,2,0,2,2,2]], \
	87: [[2,0,2,2,2,0,2],[0,1,0,2,0,1,0],[0,1,0,0,0,1,0],[0,1,0,1,0,1,0],[0,1,0,1,0,1,0],[2,0,1,0,1,0,2],[2,2,0,2,0,2,2]], \
	88: [[2,0,2,2,2,0,2],[0,1,0,2,0,1,0],[2,0,1,0,1,0,2],[2,2,0,1,0,2,2],[2,0,1,0,1,0,2],[0,1,0,2,0,1,0],[2,0,2,2,2,0,2]], \
	89: [[2,0,2,2,2,0,2],[0,1,0,2,0,1,0],[0,1,0,2,0,1,0],[2,0,1,0,1,0,2],[2,2,0,1,0,2,2],[2,2,0,1,0,2,2],[2,2,2,0,2,2,2]], \
	90: [[2,0,0,0,0,0,2],[0,1,1,1,1,1,0],[2,0,0,0,1,0,2],[2,2,0,1,0,2,2],[2,0,1,0,0,0,2],[0,1,1,1,1,1,0],[2,0,0,0,0,0,2]], \
	91: [[2,0,0,0,2],[0,1,1,1,0],[0,1,0,0,2],[0,1,0,2,2],[0,1,0,0,2],[0,1,1,1,0],[2,0,0,0,2]], \
	92: [[2,0,2,2,2,2,2],[0,1,0,2,2,2,2],[2,0,1,0,2,2,2],[2,2,0,1,0,2,2],[2,2,2,0,1,0,2],[2,2,2,2,0,1,0],[2,2,2,2,2,0,2]], \
	93: [[2,0,0,0,2],[0,1,1,1,0],[2,0,0,1,0],[2,2,0,1,0],[2,0,0,1,0],[0,1,1,1,0],[2,0,0,0,2]], \
	94: [[2,2,2,0,2,2,2],[2,2,0,1,0,2,2],[2,0,1,0,1,0,2],[0,1,0,2,0,1,0],[2,0,2,2,2,0,2],[2,2,2,2,2,2,2],[2,2,2,2,2,2,2]], \
	95: [[2,2,2,2,2,2,2],[2,2,2,2,2,2,2],[2,2,2,2,2,2,2],[2,2,2,2,2,2,2],[2,0,0,0,0,0,2],[0,1,1,1,1,1,0],[2,0,0,0,0,0,2]], \
}

screen = pygame.Surface((48, 12), pygame.SRCALPHA, 32)
window = pygame.display.set_mode((windowwidth, windowheight), pygame.NOFRAME)
pygame.display.set_caption("LED dev app")
pygame.mouse.set_visible(False)

running = True

startDate = time.time()
curTime = startDate
frame = 0
drawFrame = True

######################
### EFFECTS START HERE
######################

def testEffect(curTime, frame):
	x = frame % 48
	y = int(math.sin(curTime) * 6 + 6)
	matrix[y][x] = 1

def drawLogo1(curTime, frame):
	for x in range(48):
		for y in range(12):
			if logo1[y][x] == 0 or logo1[y][x] == 1:
				matrix[y][x] = logo1[y][x]

def drawLogo2(curTime, frame):
	if frame > 20:
		for x in range(48):
			for y in range(12):
				offset = int((frame - 32) + y)
				if offset >= 0 and offset < 32:
					matrix[y][x] = logo2[offset][x]

def fadeScanlines(curTime, frame, startFrame):
	if startFrame <= frame:
		for x in range(48):
			for y in range(12):
				if y % 2 == 1:
					if x < (frame - startFrame) * 2:
						matrix[y][x] = 0
				else:
					if (47 - x) < (frame - startFrame) * 2:
						matrix[y][x] = 0

rotozoomerAtans = [[0 for col in range(96)] for row in range(24)]
def preloadRotozoomer():
	for x in range(96):
		for y in range(24):
			rotozoomerAtans[y - 12][x - 48] = math.atan2(y, x)

def drawDizzyCircleTiles(curTime, frame):
	angle = frame / 15
	for x in range(48):
		for y in range(12):
			xOffset = x - 24
			yOffset = y - 6
			trigParam = rotozoomerAtans[yOffset][xOffset] + angle
			hypoParam = math.sqrt(yOffset * yOffset + xOffset * xOffset)
			mappedY = round((math.sin(trigParam) * hypoParam) * math.sin(frame / 50))
			mappedX = round((math.cos(trigParam) * hypoParam) * math.sin(frame / 50))
			matrix[y][x] = (mappedX % 8 < 4) ^ (mappedY % 8 >= 4)

def drawRotozoomer(curTime, frame):
	angle = frame / 15
	for x in range(48):
		for y in range(12):
			xOffset = x - 24
			yOffset = y - 6
			trigParam = math.atan2(yOffset, xOffset) + angle
			hypoParam = math.sqrt(yOffset * yOffset + xOffset * xOffset)
			mappedY = round((math.sin(trigParam) * hypoParam) * math.sin(frame / 50))
			mappedX = round((math.cos(trigParam) * hypoParam) * math.sin(frame / 50))
			matrix[y][x] = (mappedX % 8 < 4) ^ (mappedY % 8 >= 4)

def drawRegularPolygon(curTime, frame):
	points = []
	sides = 3
	for i in range(sides):
		x = math.cos(2 * math.pi * (i / sides) + frame / 5) * 6 + 24
		y = math.sin(2 * math.pi * (i / sides) + frame / 5) * 6 + 5
		matrix[int(y)][int(x)] = 1
		points.append([int(x), int(y)])
	drawPolygon(points)

####################
### EFFECTS END HERE
####################

##################################
### AUXILIARY FUNCTIONS START HERE
##################################

def drawPolygon(points):
	for i in range(len(points)):
		x1 = points[i][0]
		y1 = points[i][1]
		if i == len(points) - 1:
			x2 = points[0][0]
			y2 = points[0][1]
		else:
			x2 = points[i + 1][0]
			y2 = points[i + 1][1]
		
		drawLine(x1, y1, x2, y2)

def drawLine(x1, y1, x2, y2):
	dx = x2 - x1
	dy = y2 - y1

	if abs(dx) > abs(dy):
		if x2 > x1:
			for x in range(x1, x2):
				rampStep = (x - x1) / (x2 - x1)
				y = round((y2 - y1) * rampStep) + y1
				if checkDrawOutOfBounds("y", y) and checkDrawOutOfBounds("x", x):
					matrix[y][x] = 1
		else:
			for x in range(x2, x1):
				rampStep = (x - x2) / (x1 - x2)
				y = round((y1 - y2) * rampStep) + y2
				if checkDrawOutOfBounds("y", y) and checkDrawOutOfBounds("x", x):
					matrix[y][x] = 1
	else:
		if y2 > y1:
			for y in range(y1, y2):
				rampStep = (y - y1) / (y2 - y1)
				x = round((x2 - x1) * rampStep) + x1
				if checkDrawOutOfBounds("y", y) and checkDrawOutOfBounds("x", x):
					matrix[y][x] = 1
		else:
			for y in range(y2, y1):
				rampStep = (y - y2) / (y1 - y2)
				x = round((x1 - x2) * rampStep) + x2
				if checkDrawOutOfBounds("y", y) and checkDrawOutOfBounds("x", x):
					matrix[y][x] = 1

def checkDrawOutOfBounds(coord, value):
	if coord == "x" and (value < 0 or value >= 48):
		return False
	if coord == "y" and (value < 0 or value >= 12):
		return False
	return True

################################
### AUXILIARY FUNCTIONS END HERE
################################

def drawMatrix():
	for x in range(48):
		for y in range(12):
			if matrix[y][x] == 1:
				pygame.draw.polygon(screen, (255, 255, 255), ((x, y), (x, y), (x, y), (x, y)))

while running:
	keys = pygame.key.get_pressed()
	event = pygame.event.poll()
	if event.type == pygame.QUIT or keys[pygame.K_ESCAPE]:
		running = False

	newTime = time.time()
	curFrame = math.floor((newTime - startDate) * fps)
	if curFrame > frame:
		matrix = [[0 for col in range(48)] for row in range(12)]
		screen.fill((0, 0, 0))
		curTime = newTime
		frame = curFrame
		drawFrame = True

	if drawFrame:
		pygame.display.set_caption("LED dev -- frame " + str(frame))

		# drawLogo2(curTime, frame)
		# drawLogo1(curTime, frame)
		# fadeScanlines(curTime, frame, 64)

		# preloadRotozoomer()
		# # drawRotozoomer(curTime, frame)
		# drawDizzyCircleTiles(curTime, frame)

		drawRegularPolygon(curTime, frame)

		drawMatrix()
		drawFrame = False

	resized_screen = pygame.transform.scale(screen, (windowwidth, windowheight))
	window.blit(resized_screen, (0, 0))
	pygame.display.flip()

